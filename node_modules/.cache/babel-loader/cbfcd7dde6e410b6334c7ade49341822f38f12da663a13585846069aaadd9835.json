{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport clevertap from 'clevertap-web-sdk';\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD4fod_6G9JL1ZnnjaaM2PGZcNyME-sDQ0\",\n  authDomain: \"test-86509.firebaseapp.com\",\n  projectId: \"test-86509\",\n  storageBucket: \"test-86509.appspot.com\",\n  messagingSenderId: \"618828970358\",\n  appId: \"1:618828970358:web:4ae080527c4fd1ad36e257\",\n  measurementId: \"G-KTGD87QPCH\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nexport default {\n  methods: {\n    pushPermission() {\n      if (clevertap) {\n        clevertap.event.push(\"Product viewed\");\n        console.log(\"Event Pushed\");\n      } else {\n        console.error('CleverTap is not available.');\n      }\n    },\n    trackProductView() {\n      if (clevertap) {\n        clevertap.event.push(\"Product viewed\");\n        console.log(\"Event Pushed\");\n      } else {\n        console.error('CleverTap is not available.');\n      }\n    },\n    trackUser() {\n      if (clevertap) {\n        clevertap.onUserLogin.push({\n          \"Site\": {\n            \"Name\": \"Vue Name1\",\n            // String\n            \"Identity\": \"vueuseridentity1\",\n            // String or number\n            \"Email\": \"vue1@gmail.com\",\n            // Email address of the user\n            \"Phone\": \"+910719636312\",\n            // Phone (with the country code)\n            \"Gender\": \"M\",\n            // Can be either M or F\n            \"DOB\": new Date(),\n            // Date of Birth. Date object\n            // optional fields. controls whether the user will be sent email, push etc.\n\n            \"MSG-sms\": true,\n            // Enable sms notifications\n            \"MSG-whatsapp\": true // Enable WhatsApp notifications\n          }\n        });\n\n        console.log(\"User Created\");\n      } else {\n        console.error('CleverTap is not available.');\n      }\n    }\n  },\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  }\n};","map":{"version":3,"names":["clevertap","initializeApp","getAnalytics","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","methods","pushPermission","event","push","console","log","error","trackProductView","trackUser","onUserLogin","Date","name","props","msg","String"],"sources":["/Users/deven/Documents/vuejs-Clevertap/vueclevertap/src/components/HelloWorld.vue"],"sourcesContent":["\n<template>\n  <div class=\"hello\">\n \n    <h1>{{ msg }}</h1>\n    <p>\n     \n      <br>\n\n        <button @click=\"trackProductView\" style=\"background-color: #04AA6D;\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin: 4px 2px;\n  cursor: pointer;\">Track Product View</button>\n\n         <br>\n  \n  <br>\n <button @click=\"trackUser\" style=\"background-color: #04AA6D;\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin: 4px 2px;\n  cursor: pointer;\">Record User</button>  \n\n   <br>\n  \n  <br>\n <button @click=\"pushPermission\" style=\"background-color: #04AA6D;\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin: 4px 2px;\n  cursor: pointer;\">Push Permission</button>  \n    </p>\n   \n  </div>\n</template>\n\n<script>\nimport clevertap from 'clevertap-web-sdk';\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD4fod_6G9JL1ZnnjaaM2PGZcNyME-sDQ0\",\n  authDomain: \"test-86509.firebaseapp.com\",\n  projectId: \"test-86509\",\n  storageBucket: \"test-86509.appspot.com\",\n  messagingSenderId: \"618828970358\",\n  appId: \"1:618828970358:web:4ae080527c4fd1ad36e257\",\n  measurementId: \"G-KTGD87QPCH\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nexport default {\n  methods: {\n\n    pushPermission() {\n      if (clevertap) {\n        clevertap.event.push(\"Product viewed\");\n        console.log(\"Event Pushed\")\n      } else {\n        console.error('CleverTap is not available.');\n      }\n    },\n\n    trackProductView() {\n      if (clevertap) {\n        clevertap.event.push(\"Product viewed\");\n        console.log(\"Event Pushed\")\n      } else {\n        console.error('CleverTap is not available.');\n      }\n    },trackUser() {\n      if (clevertap) {\n       clevertap.onUserLogin.push({\n \"Site\": {\n   \"Name\": \"Vue Name1\",            // String\n   \"Identity\": \"vueuseridentity1\",              // String or number\n   \"Email\": \"vue1@gmail.com\",         // Email address of the user\n   \"Phone\": \"+910719636312\",           // Phone (with the country code)\n   \"Gender\": \"M\",                     // Can be either M or F\n   \"DOB\": new Date(),                 // Date of Birth. Date object\n// optional fields. controls whether the user will be sent email, push etc.\n         \n                \n   \"MSG-sms\": true,                   // Enable sms notifications\n   \"MSG-whatsapp\": true,              // Enable WhatsApp notifications\n }\n})\n        console.log(\"User Created\")\n      } else {\n        console.error('CleverTap is not available.');\n      }\n    }\n  },\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"mappings":";AAqDA,OAAOA,SAAQ,MAAO,mBAAmB;;AAEzC;AACA,SAASC,aAAY,QAAS,cAAc;AAC5C,SAASC,YAAW,QAAS,oBAAoB;AACjD;AACA;;AAEA;AACA;AACA,MAAMC,cAAa,GAAI;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,4BAA4B;EACxCC,SAAS,EAAE,YAAY;EACvBC,aAAa,EAAE,wBAAwB;EACvCC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA,MAAMC,GAAE,GAAIV,aAAa,CAACE,cAAc,CAAC;AACzC,MAAMS,SAAQ,GAAIV,YAAY,CAACS,GAAG,CAAC;AACnC,eAAe;EACbE,OAAO,EAAE;IAEPC,cAAcA,CAAA,EAAG;MACf,IAAId,SAAS,EAAE;QACbA,SAAS,CAACe,KAAK,CAACC,IAAI,CAAC,gBAAgB,CAAC;QACtCC,OAAO,CAACC,GAAG,CAAC,cAAc;MAC5B,OAAO;QACLD,OAAO,CAACE,KAAK,CAAC,6BAA6B,CAAC;MAC9C;IACF,CAAC;IAEDC,gBAAgBA,CAAA,EAAG;MACjB,IAAIpB,SAAS,EAAE;QACbA,SAAS,CAACe,KAAK,CAACC,IAAI,CAAC,gBAAgB,CAAC;QACtCC,OAAO,CAACC,GAAG,CAAC,cAAc;MAC5B,OAAO;QACLD,OAAO,CAACE,KAAK,CAAC,6BAA6B,CAAC;MAC9C;IACF,CAAC;IAACE,SAASA,CAAA,EAAG;MACZ,IAAIrB,SAAS,EAAE;QACdA,SAAS,CAACsB,WAAW,CAACN,IAAI,CAAC;UACjC,MAAM,EAAE;YACN,MAAM,EAAE,WAAW;YAAa;YAChC,UAAU,EAAE,kBAAkB;YAAe;YAC7C,OAAO,EAAE,gBAAgB;YAAU;YACnC,OAAO,EAAE,eAAe;YAAY;YACpC,QAAQ,EAAE,GAAG;YAAsB;YACnC,KAAK,EAAE,IAAIO,IAAI,CAAC,CAAC;YAAkB;YACtC;;YAGG,SAAS,EAAE,IAAI;YAAoB;YACnC,cAAc,EAAE,IAAI,CAAe;UACrC;QACD,CAAC;;QACON,OAAO,CAACC,GAAG,CAAC,cAAc;MAC5B,OAAO;QACLD,OAAO,CAACE,KAAK,CAAC,6BAA6B,CAAC;MAC9C;IACF;EACF,CAAC;EACDK,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,GAAG,EAAEC;EACP;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}